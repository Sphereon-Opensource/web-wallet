NODE_ENV=development

# Allows you to prefix all the environment variables.
# If set, all the environment variables should start with this prefix
# ENV_VAR_PREFIX=

# The database connection name
DB_CONNECTION_NAME=default

# Whether to enable the cache on the DB.
DB_CACHE_ENABLED=true

# The Database type. Currently only sqlite, postgresql and memory are supported. If memory is provided, it means that an in-memory sqlite database without a file will be used
DB_TYPE=postgresql

# The URL of the database. Either use the URL (more flexible), or you can also use DB_HOST and DB_PORT for postgres
# In case of sqlite, this should be the path, like 'database/agent_default.sqlite' or ':memory' if you only want an in memory database
# For postgres you can also include username and password: postgresql://user:password:5432/vc-issuer-db?sslmode=prefer
# When using a postgresl url, the sslmode param options can be found here: https://www.postgresql.org/docs/12/libpq-connect.html
DB_URL="postgresql://user:password@localhost:5432/vc-issuer-db?sslmode=prefer"


# Whether to enable SSL on the connection
DB_USE_SSL=false

#
# Optionally override the trusted CA certificates. Default is to trust
# the well-known CAs curated by Mozilla. Mozilla's CAs are completely
# replaced when CAs are explicitly specified using this option.
#
# DB_SSL_CA=path/ca.cert

# Allow SELF Signed Certificates, not from an official CA
# DB_SSL_ALLOW_SELF_SIGNED=true

# Using DB_URL is recommended! Set the host of the DB in case DB_URL is not used
# DB_HOST="localhost"

# Using DB_URL is recommended! Set the port of the DB in case DB_URL is not used
# DB_PORT=5432

# Using DB_URL is recommended! Set the username of the DB in case DB_URL is not used
# DB_USERNAME="username"

# Using DB_URL is recommended! Set the password of the DB in case DB_URL is not used
# DB_PASSWORD="secret"

# The encryption key to use for the database for encrypted fields, like private keys. Needs to be unique per environment.
# Key needs to be in hex with length 64
DB_ENCRYPTION_KEY=29739248cad1bd1a0fc4d9b75cd4d2990de535baf5caadfdf8d8f86664aa830c


# The IP address or hostname on the internal machine. Note
# that this can be a different port than exposed to the outside world via a reverse proxy or loadbalancer
INTERNAL_HOSTNAME_OR_IP=0.0.0.0

# The port the agent will listen to.
PORT=5000

# How to import DIDs. Can either by from `environment`, `filesystem` or none
DID_IMPORT_MODE=environment

# If you want to import a DID:WEB with X509 certificates use the following env vars
DID_WEB_DID=did:web:localhost
# The below X509 options are required when DID_WEB_DID is configured
DID_WEB_CERT_PEM="-----BEGIN CERTIFICATE-----\nMIIGYjCCBMqgAwIBAgIQDy+1BhXKuxzdovu9w4FQjDANBgkqhkiG9w0BAQwFADA7\nMQswCQYDVQQGEwJVUzEQMA4GA1UEChMHQ2VydGVyYTEaMBgGA1UEAxMRQ2VydGVy\nYSBEViBTU0wgQ0EwHhcNMjMwNTI0MDAwMDAwWhcNMjQwNjIzMjM1OTU5WjAcMRow\nGAYDVQQDExFkZGlwLnNwaGVyZW9uLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEP\nADCCAQoCggEBALqREdqeJ7nvJqyTmrumT2ms2IGJT6T8JOKQ7hvo21ksTFO+G3lH\nx8REsml3IJo0y7kH5+8q48beu8RUzsGihCMdX+dRoV7Tsapp01gn1gTBQmJU5xG9\nqMcjB1VCPXZiXJmmijAUzQ5rwkaRwm4qHrVw3wv9xjagY2xfvxjgJJzYih4XJcnw\n8xrckFjULnhD3wIiD0HN3d/h55cJTX2r/39Vbw5XGyeMc4zJOjf6gsiybGw0UKqm\nSSTn8X44qXWzGAamBHFzw0pnc5E+rHHJKl4HS3pUX7ceDt58w6p8q7/DwNpCgUUa\ngspq2CtVWqu7pOiUAOsOTIDe5npFaZK10KsCAwEAAaOCAv8wggL7MB8GA1UdIwQY\nMBaAFNN6hzrGkln/4n2yDTPo9oT6pXBoMB0GA1UdDgQWBBTfwjqc+CQSs5V34+As\nbhxjUkZt6jAOBgNVHQ8BAf8EBAMCBaAwDAYDVR0TAQH/BAIwADAdBgNVHSUEFjAU\nBggrBgEFBQcDAQYIKwYBBQUHAwIwSQYDVR0gBEIwQDA0BgsrBgEEAbIxAQICZTAl\nMCMGCCsGAQUFBwIBFhdodHRwczovL3NlY3RpZ28uY29tL0NQUzAIBgZngQwBAgEw\negYIKwYBBQUHAQEEbjBsMD0GCCsGAQUFBzAChjFodHRwOi8vQ2VydGVyYS5jcnQu\nc2VjdGlnby5jb20vQ2VydGVyYURWU1NMQ0EuY3J0MCsGCCsGAQUFBzABhh9odHRw\nOi8vQ2VydGVyYS5vY3NwLnNlY3RpZ28uY29tMDMGA1UdEQQsMCqCEWRkaXAuc3Bo\nZXJlb24uY29tghV3d3cuZGRpcC5zcGhlcmVvbi5jb20wggF+BgorBgEEAdZ5AgQC\nBIIBbgSCAWoBaAB2AHb/iD8KtvuVUcJhzPWHujS0pM27KdxoQgqf5mdMWjp0AAAB\niE0iJhUAAAQDAEcwRQIhAKpqJSzyNP0ICed91Nw6oh+xfjsXvaMC2EqMKvKrQIOP\nAiApB5/2P+PUiUATVn6g85qR3JaapaN87izuqbvGZC84zwB2ANq2v2s/tbYin5vC\nu1xr6HCRcWy7UYSFNL2kPTBI1/urAAABiE0iJnEAAAQDAEcwRQIhAK8pz8tXOyaq\n0zdOjzk3CyG3rd9gXQk6vuAcOHwRXcXpAiB/wJW3Cr1kzA8Dz0f7O9aIieUqLjFw\nb1E4ls4qyyUqAwB2AO7N0GTV2xrOxVy3nbTNE6Iyh0Z8vOzew1FIWUZxH7WbAAAB\niE0iJkQAAAQDAEcwRQIgKLFn5wRApi9lPLdKNhgXETUDeGApDWU+41pR1DzDhMAC\nIQCx724XN9M2Zg/xnCDJ44RGlh4EVBUkXpXdrwe9bMbgkjANBgkqhkiG9w0BAQwF\nAAOCAYEAeFuHhs8PGiTtfpps+IJd3qipeDns+BpfNOE7dYuMhBlB2x/TEyxCcaYe\nzYWq0I4YBB1MupgPj5e67n6p64ajQE0qFbO3ICVhKDPkmTgA/dM8vuUce8eg7B7+\ngpsaRagpDfPg8x2gCYNvRX10T2zPmm+vFjYk9lU38iLn+TrkAX3hqbNtOd1D8SHH\ngkvMU9Xty5YrsaA+wl4myhRl/7JCpr+S7QkESeOzBBFzNBVTuLaEI8pY6o1R6Hjn\npIocyrdKbn5vYBP/7+aHfSTGdo5Q4sCtwa22GPeUccbHIW0xVqNNOYruS8nH9vjI\nNEInDXcFrfjXGvzuyCqo/AzK1XPpEYej6LIb0kQNMT1JybNUNgomUynV8ClCZKmQ\n7gjTrMlEHrltlMwAh/zIUw4x32iuJJChffne6eQhSOl5LgATxS5Ez8DC/eF8arVO\nMqQTd6dbUrp8IXOzegXfKK3iZtbjWR7d4w7m8jyERTIMu39O8OlqVpBxVuupRniD\nx1XL6Lmc\n-----END CERTIFICATE-----\n"
DID_WEB_PRIVATE_KEY_PEM="-----BEGIN PRIVATE KEY-----\nMIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQC6kRHanie57yas\nk5q7pk9prNiBiU+k/CTikO4b6NtZLExTvht5R8fERLJpdyCaNMu5B+fvKuPG3rvE\nVM7BooQjHV/nUaFe07GqadNYJ9YEwUJiVOcRvajHIwdVQj12YlyZpoowFM0Oa8JG\nkcJuKh61cN8L/cY2oGNsX78Y4CSc2IoeFyXJ8PMa3JBY1C54Q98CIg9Bzd3f4eeX\nCU19q/9/VW8OVxsnjHOMyTo3+oLIsmxsNFCqpkkk5/F+OKl1sxgGpgRxc8NKZ3OR\nPqxxySpeB0t6VF+3Hg7efMOqfKu/w8DaQoFFGoLKatgrVVqru6TolADrDkyA3uZ6\nRWmStdCrAgMBAAECggEBAIVRhWCkA99qdkh8ceYGQllRmqV2aeOMCw+cYYqwK47d\niO2OvDM+iBJIxPV4m2OWtr3SWHsgOwSxxZvWvqjAaYxuQUobmyUYQa11UgF89gMP\n11BNO5IB5cnnziWu4BzozSM/TyBsvNvBRWMIZdgzYR5nOfxnrGz80A9xnC06fu9U\n1Ku2NaTpxJteEHavbno+Wu/W2eRpfDIdI/utlEaDUrdExjhi31giAv9cA+2vARWt\nsBn2Rqjlw2O+o9rDJMBFZrOibptXV86ouP37oOWLb7aAB6/UlXqEhSBw8VvENFxo\nWx+TeeKnQrqMlfSnjl064YdmZ+jkvxg/DnKt+5A8QoECgYEA61K/g+YHKg8H4B09\nl7h0jagJyMC5wND8+j7/jX3TrmArZM8qifOGG8WaxeccYzxuvX1nEb8IQdTt4cIx\nGmy0SxlTME5lOMknIbkL+1DtLsYjDGaA1x+lZc3fkgS0vwhlGN/Xuw78ATkoutyB\nbcg1pVIVa5FD4otYLRWzqcot2n8CgYEAyvWdPo+EGlt+YvpuEOFTLnbyhroVxZ7k\ndNxyRE5ucBzZaghfmj0zaYZ3HfA05E+SoSjXY08UpZDcuGV95Zp50iAWuvXOgIBf\nrTSIPEX2ithDw6uBSmlTDcsi6a9Iqtq44BXM2rs6ug7E9EgbXWz2ZK5T/k72tpeD\n44oyg1tse9UCgYB7RLthwmtaUslTUr3i7hLP6YhGiv5CzLbX94wyeAkcvO++PO8R\nmGlVvutWY7vxF8UCqeAF4cXXhkyeB/Vk3DCNblSvZ0GKv4QqHB70pO25pLzTUBaJ\nmeAwNem5OZHcx+79WrRNHopPsbtuNvftpATF9vuVf2DKGSg1ZbrZZDkkzQKBgQC5\nQS/iZsVB+bmHRucoaUOv6cq9xyUQWVRWhtGWH7EWjH63FiWNd8dxztbzcMoWi7tf\ndxQDBa/m4C9X8OvVpAcGEVwuEygGiybJxmWD/qhnW7ee5vEAptq0gHLBssk1iqet\ngriV/shABDMqdpbj1A2jIKxyOElhqTMtgntRAyYmcQKBgQCSWdBwMQIbMQNn56Uu\ntdfSsLQKmjOceuuEiSIczQxrPE6ZJKGWEA7gLHG9Ap9r5Up48/9Girtm0uIFS435\nHOfOCyGUQjLzHCM8V3suEpHPzFcgAxOUzYuNau+d6oUq0gJQ+b0NGd0orpwoP0Bb\n0dtV1fJUFk8YoIV9LMFzExBqbw==\n-----END PRIVATE KEY-----\n"
DID_WEB_CERT_CHAIN_PEM="-----BEGIN CERTIFICATE-----\nMIIEMjCCAxqgAwIBAgIBATANBgkqhkiG9w0BAQUFADB7MQswCQYDVQQGEwJHQjEb\nMBkGA1UECAwSR3JlYXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHDAdTYWxmb3JkMRow\nGAYDVQQKDBFDb21vZG8gQ0EgTGltaXRlZDEhMB8GA1UEAwwYQUFBIENlcnRpZmlj\nYXRlIFNlcnZpY2VzMB4XDTA0MDEwMTAwMDAwMFoXDTI4MTIzMTIzNTk1OVowezEL\nMAkGA1UEBhMCR0IxGzAZBgNVBAgMEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UE\nBwwHU2FsZm9yZDEaMBgGA1UECgwRQ29tb2RvIENBIExpbWl0ZWQxITAfBgNVBAMM\nGEFBQSBDZXJ0aWZpY2F0ZSBTZXJ2aWNlczCCASIwDQYJKoZIhvcNAQEBBQADggEP\nADCCAQoCggEBAL5AnfRu4ep2hxxNRUSOvkbIgwadwSr+GB+O5AL686tdUIoWMQua\nBtDFcCLNSS1UY8y2bmhGC1Pqy0wkwLxyTurxFa70VJoSCsN6sjNg4tqJVfMiWPPe\n3M/vg4aijJRPn2jymJBGhCfHdr/jzDUsi14HZGWCwEiwqJH5YZ92IFCokcdmtet4\nYgNW8IoaE+oxox6gmf049vYnMlhvB/VruPsUK6+3qszWY19zjNoFmag4qMsXeDZR\nrOme9Hg6jc8P2ULimAyrL58OAd7vn5lJ8S3frHRNG5i1R8XlKdH5kBjHYpy+g8cm\nez6KJcfA3Z3mNWgQIJ2P2N7Sw4ScDV7oL8kCAwEAAaOBwDCBvTAdBgNVHQ4EFgQU\noBEKIz6W8Qfs4q8p74Klf9AwpLQwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQF\nMAMBAf8wewYDVR0fBHQwcjA4oDagNIYyaHR0cDovL2NybC5jb21vZG9jYS5jb20v\nQUFBQ2VydGlmaWNhdGVTZXJ2aWNlcy5jcmwwNqA0oDKGMGh0dHA6Ly9jcmwuY29t\nb2RvLm5ldC9BQUFDZXJ0aWZpY2F0ZVNlcnZpY2VzLmNybDANBgkqhkiG9w0BAQUF\nAAOCAQEACFb8AvCb6P+k+tZ7xkSAzk/ExfYAWMymtrwUSWgEdujm7l3sAg9g1o1Q\nGE8mTgHj5rCl7r+8dFRBv/38ErjHT1r0iWAFf2C3BUrz9vHCv8S5dIa2LX1rzNLz\nRt0vxuBqw8M0Ayx9lt1awg6nCpnBBYurDC/zXDrPbDdVCYfeU0BsWO/8tqtlbgT2\nG9w84FoVxp7Z8VlIMCFlA2zs6SFz7JsDoeA3raAVGI/6ugLOpyypEBMs1OUIJqsi\nl2D4kF501KKaU73yqWjgom7C12yxow+ev+to51byrvLjKzg6CYG1a4XXvi3tPxq3\nsmPi9WIsgtRqAEFQ8TmDn5XpNpaYbg==\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIFgTCCBGmgAwIBAgIQOXJEOvkit1HX02wQ3TE1lTANBgkqhkiG9w0BAQwFADB7\nMQswCQYDVQQGEwJHQjEbMBkGA1UECAwSR3JlYXRlciBNYW5jaGVzdGVyMRAwDgYD\nVQQHDAdTYWxmb3JkMRowGAYDVQQKDBFDb21vZG8gQ0EgTGltaXRlZDEhMB8GA1UE\nAwwYQUFBIENlcnRpZmljYXRlIFNlcnZpY2VzMB4XDTE5MDMxMjAwMDAwMFoXDTI4\nMTIzMTIzNTk1OVowgYgxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpOZXcgSmVyc2V5\nMRQwEgYDVQQHEwtKZXJzZXkgQ2l0eTEeMBwGA1UEChMVVGhlIFVTRVJUUlVTVCBO\nZXR3b3JrMS4wLAYDVQQDEyVVU0VSVHJ1c3QgUlNBIENlcnRpZmljYXRpb24gQXV0\naG9yaXR5MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAgBJlFzYOw9sI\ns9CsVw127c0n00ytUINh4qogTQktZAnczomfzD2p7PbPwdzx07HWezcoEStH2jnG\nvDoZtF+mvX2do2NCtnbyqTsrkfjib9DsFiCQCT7i6HTJGLSR1GJk23+jBvGIGGqQ\nIjy8/hPwhxR79uQfjtTkUcYRZ0YIUcuGFFQ/vDP+fmyc/xadGL1RjjWmp2bIcmfb\nIWax1Jt4A8BQOujM8Ny8nkz+rwWWNR9XWrf/zvk9tyy29lTdyOcSOk2uTIq3XJq0\ntyA9yn8iNK5+O2hmAUTnAU5GU5szYPeUvlM3kHND8zLDU+/bqv50TmnHa4xgk97E\nxwzf4TKuzJM7UXiVZ4vuPVb+DNBpDxsP8yUmazNt925H+nND5X4OpWaxKXwyhGNV\nicQNwZNUMBkTrNN9N6frXTpsNVzbQdcS2qlJC9/YgIoJk2KOtWbPJYjNhLixP6Q5\nD9kCnusSTJV882sFqV4Wg8y4Z+LoE53MW4LTTLPtW//e5XOsIzstAL81VXQJSdhJ\nWBp/kjbmUZIO8yZ9HE0XvMnsQybQv0FfQKlERPSZ51eHnlAfV1SoPv10Yy+xUGUJ\n5lhCLkMaTLTwJUdZ+gQek9QmRkpQgbLevni3/GcV4clXhB4PY9bpYrrWX1Uu6lzG\nKAgEJTm4Diup8kyXHAc/DVL17e8vgg8CAwEAAaOB8jCB7zAfBgNVHSMEGDAWgBSg\nEQojPpbxB+zirynvgqV/0DCktDAdBgNVHQ4EFgQUU3m/WqorSs9UgOHYm8Cd8rID\nZsswDgYDVR0PAQH/BAQDAgGGMA8GA1UdEwEB/wQFMAMBAf8wEQYDVR0gBAowCDAG\nBgRVHSAAMEMGA1UdHwQ8MDowOKA2oDSGMmh0dHA6Ly9jcmwuY29tb2RvY2EuY29t\nL0FBQUNlcnRpZmljYXRlU2VydmljZXMuY3JsMDQGCCsGAQUFBwEBBCgwJjAkBggr\nBgEFBQcwAYYYaHR0cDovL29jc3AuY29tb2RvY2EuY29tMA0GCSqGSIb3DQEBDAUA\nA4IBAQAYh1HcdCE9nIrgJ7cz0C7M7PDmy14R3iJvm3WOnnL+5Nb+qh+cli3vA0p+\nrvSNb3I8QzvAP+u431yqqcau8vzY7qN7Q/aGNnwU4M309z/+3ri0ivCRlv79Q2R+\n/czSAaF9ffgZGclCKxO/WIu6pKJmBHaIkU4MiRTOok3JMrO66BQavHHxW/BBC5gA\nCiIDEOUMsfnNkjcZ7Tvx5Dq2+UUTJnWvu6rvP3t3O9LEApE9GQDTF1w52z97GA1F\nzZOFli9d31kWTz9RvdVFGD/tSo7oBmF0Ixa1DVBzJ0RHfxBdiSprhTEUxOipakyA\nvGp4z7h/jnZymQyd/teRCBaho1+V\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\n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\nMvbfrkXKreFHUTuvjm3yYJi/reiQ\n-----END CERTIFICATE-----\n\n"
## A KID is optional, otherwise a default value will be used
DID_WEB_KID=JWK2020-RSA

# Allows you to set a default DID value for the agent.
# The agent will use this DID for instance to issue VCs if no other options are provided
# If not provided the first DID known/imported to the agent will be used as a default
# DEFAULT_DID=did:web:verification.gs1.nl

# Allows you to set a default Key Identifier value for the agent.
# The agent will use this KID for instance to get the private key to issue VCs if no other options are provided
# If not provided the first Key Identifier known/imported to the agent will be used as a default
# DEFAULT_DID=auth-key

# The path to read configuration files from that will be imported into the agent. For now mainly used to import DIDs.
# Point it to an empty folder or non-existing folder if you do not want to import DIDs
CONF_PATH="./conf/dev"

# The base path that will be used for the Verifiable Credential API. Defaults to /vc.
# The VC API endpoints will be made available below http://localhost:5000/vc
VC_API_BASE_PATH=/vc


# The proof/signature format to use when issuing Verifiable Credential. Possible values are 'jwt' and 'lds'
# lds: Linked Data Signatures, previously known as LD Signatures. They are using JSON LD, which is the original W3C VC Datamodel format
# jwt: Using an alternative encoding for Verifiable Credentials. Typically used where semantics are not really needed
VC_API_DEFAULT_PROOF_FORMAT=lds

# Comma delimited list of features to enable on the VC API. Do not use spaces or other values than the values listed below
# If a feature is not listed, it means the certain endpoints associated with that feature will not be present
# vc-issue: Support issuance of Verifiable Credentials
# vc-verify: Support verification of Verifiable Credentials
# vc-persist: Support persistence of Verifialbe Credentials, also enables getting all or a single VC and deleting a VC from the DB
VC_API_FEATURES=vc-issue,vc-verify,vc-persist


# The base path that will be used for the status list API. Defaults to /vc just like the VC_API base path
# The endpoints will be made available by default of http://localhost:5000/vc
STATUS_LIST_API_BASE_PATH=/vc

# The DID of the status list. This should be the same DID as the issuer of VCs.
# STATUS_LIST_ISSUER=


# The id (URL) of the status list. This needs to be a resolvable URL that hosts the status list credential.
STATUS_LIST_ID=https://verification.gs1.nl/vc/status-lists/1

# A correlation id for the status list. This ID is mandatory and is mainly used when calling endpoints
STATUS_LIST_CORRELATION_ID=default-sl

# The status list length. Should be at least 150.000 to ensure heard privacy for subjects. Random indices from this list will be used
# when issuing credentials
STATUS_LIST_LENGTH=150000

# Status list purpose. Can either be 'revocation' to only allow revocation of a status, or suspoension, to allow for (temporary) suspension and reactivation
STATUS_LIST_PURPOSE=suspension


# The features to enable for status lists. Currently can contain 3 values:
# status-list-management: Create/manage new and existing status-lists. By default this endpoint is disabled as lists are seldomly created
# status-list-hosting: Hosts the status-list at the /status-lists/:id path for public consumption
# w3c-vc-api-credential-status: Provides the W3C VC API compatible endpoint to update credential status values for a specific credentialId
#STATUS_LIST_API_FEATURES=status-list-management,status-list-hosting,w3c-vc-api-credential-status
STATUS_LIST_API_FEATURES=status-list-hosting,w3c-vc-api-credential-status

# The base path that will be used for the Decentralized Identifier API. Defaults to /did.
# The DID API endpoints will be made available below http://localhost:5000/did
DID_API_BASE_PATH=/did


# Allows to set the path from where to import DID configurations into the agent.
# Normally you will not set this variable, as it will be automatically based on the CONF_PATH env var above, appending /did to it
# DID_OPTIONS_PATH=./conf/dev/did

# Comma delimited list of features to enable on the DID API. Do not use spaces or other values than the values listed below
# If a feature is not listed, it means the certain endpoints associated with that feature will not be present
# did-resolve: Enable DID resolution endpoints (not that any agent will always be able to resolve DIDs internally even when this endpoint is disabled)
# did-persist: Support persistence of Decentralized Identifiers, also enables deleting a DID from the DB
DID_API_FEATURES=did-persist,did-resolve

# Which mode to use by default for DID resolution
# local: Only DIDs managed by the agent can be resolved. DID:web and it's keys are translated to DID documents
# global: Resolves DIDs by using the supported resolvers of the agent, allowing external DID resolution
# hybrid: (default) Tries to resolve locally first. If not found it will fallback to the global mode
DID_API_RESOLVE_MODE=hybrid

# Comma delimited list of features to enable on the DID WEB Service API. Do not use spaces or other values than the values listed below
# If a feature is not listed, it means the certain endpoints associated with that feature will not be present
# did-web-global-resolution: Enable DID web hosting. did:web managed by the agent, is also exposed at the relevant https locations
# If no feature is supplied, then DID web hosting will be disabled
DID_WEB_SERVICE_FEATURES=did-web-global-resolution

# Whether to enable authentication globally or not. Authentication is handled by passport.
# When enabled every endpoint will be protected by authentication using the strategy defined below
AUTHENTICATION_ENABLED=false

# The strategy to use for authentication with passport.
# Please note that any strategy value mentioned here, should be available programmatically to passport, typically meaning some code changes are required
AUTHENTICATION_STRATEGY=oauth-bearer

# Whether to enable authorization or not. Can only be enabled when authentication is also enabled
# There are 2 ways to check authorization:
# - Use a global check whether a user/client has a certain role
# - Use casbin. Casbin allows you to create RBAC or ABAC policies at a very detailed level. Currently, casbin integration is still a work in progress
AUTHORIZATION_ENABLED=false


# Require a user/client to have at least one role from the list of roles.
# The list is comma delimited. Do not use spaces. Requires authorization to be enabled
AUTHORIZATION_GLOBAL_REQUIRE_USER_IN_ROLES=admin,vc

# The unique key to sign cookies with
COOKIE_SIGNING_KEY=8E5er6YyAO6dIrDTm7BXYWsafBSLxzjb

