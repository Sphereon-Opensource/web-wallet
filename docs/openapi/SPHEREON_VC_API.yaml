openapi: 3.0.0
info:
  version: 0.1.0-unstable
  title: SSI web-wallet API
  description: >-
    This is an API for interacting with APIs we use in web-wallet.
  license:
    name: Apache-2
    url: https://opensource.org/license/apache-2-0/
  contact:
    name: Sphereon International BV
    url: https://sphereon.com
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/nklomp/SPHEREON_COM_VC_API/0.1.0-unstable
  - description: Issuer Dev environment
    url: http://localhost:5000
  - description: Customer Dev environment
    url: http://localhost:5001

paths:
  /vc/credentials/{id}:
    get:
      tags:
        - Credentials
      security:
        - oAuth2: []
      summary: Gets a credential or verifiable credential by Id
      operationId: getCredentialById
      parameters:
        - $ref: '#/components/parameters/ObjectId'
      responses:
        '200':
          description: Credential retrieved
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Credential'
                  - $ref: '#/components/schemas/VerifiableCredential'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Credential not found
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Credentials
      security:
        - oAuth2: []
      summary: Deletes a credential or verifiable credential by Id
      operationId: deleteCredentialById
      parameters:
        - $ref: '#/components/parameters/ObjectId'
      responses:
        '202':
          description: >-
            Credential will be deleted
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Credential not found
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /vc/credentials:
    get:
      tags:
        - Credentials
      security:
        - oAuth2: []
      summary: Gets list of credentials or verifiable credentials
      operationId: getCredentials
      parameters:
        - in: query
          name: type
          schema:
            type: array
            items:
              type: string
              pattern: (credentials|verifiablecredentials|all)
      responses:
        '200':
          description: Credentials retrieved
          content:
            application/json:
              schema:
                type: array
                description: The Credentials
                items:
                  anyOf:
                    - $ref: '#/components/schemas/VerifiableCredential'
                    - $ref: '#/components/schemas/Credential'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /vc/credentials/issue:
    post:
      summary: Issues a credential and returns it in the response body.
      tags:
        - Credentials
      security:
        - oAuth2: []
      operationId: issueCredential
      description: Issues a credential and returns it in the response body.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueCredentialRequest'
        description: Parameters for issuing the credential.
      responses:
        '201':
          description: Credential successfully issued!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCredentialResponse'
        '400':
          description: invalid input!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: error!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /vc/credentials/status:
    post:
      summary: Updates the status of an issued credential
      tags:
        - Credentials
      security:
        - oAuth2: []
      operationId: updateCredentialStatus
      description: Updates the status of an issued credential.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCredentialStatus'
        description: Parameters for updating the status of the issued credential.
      responses:
        '200':
          description: Credential status successfully updated
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Credential not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /vc/credentials/verify:
    post:
      summary: >-
        Verifies a verifiableCredential and returns a verificationResult in the
        response body.
      tags:
        - Credentials
      security:
        - oAuth2: []
      operationId: verifyCredential
      description: >-
        Verifies a verifiableCredential and returns a verificationResult in the
        response body.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyCredentialRequest'
        description: Parameters for verifying a verifiableCredential.
      responses:
        '200':
          description: Verifiable Credential successfully verified!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationResult'
        '400':
          description: invalid input!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /did/identifiers:
    post:
      summary: Create a DID.
      tags:
        - DIDs
      description:
        <p>This endpoint creates a DID. As input it takes the DID plus options, a DID document, and optionally secrets
        needed to create a DID. The output is a state object that represents the current state of the DID creation
        process.</p>
        <p>See the <a href="https://identity.foundation/did-registration/#create">DID Registration</a>
        specification for additional details.</p>
      operationId: createDID
      parameters:
        - in: query
          required: true
          name: method
          schema:
            type: string
          description: The requested DID method for the operation.
          example: btcr
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRequest'
      responses:
        '200':
          description:
            The request was successful, but the DID may not be fully created yet, as indicated by the
            "didState.state" and "jobId" output fields. Additional state information plus metadata are available in the response body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateState'
        '201':
          description:
            The DID has been successfully created, as indicated by the "didState.state" output field.
            Additional state information (including the created DID) plus metadata are available in the response body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateState'
        '400':
          description:
            A problem with the input fields has occurred. Additional state information plus metadata may be
            available in the response body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateState'
        '500':
          description:
            An internal error has occurred. Additional state information plus metadata may be
            available in the response body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateState'
  /did/identifiers/{identifier}:
    get:
      summary: Resolve a DID.
      description:
        <p>This endpoint resolves a DID. As input it takes the DID, plus DID resolution
        <a href="https://www.w3.org/TR/did-core/#did-resolution-options">options</a>. The output is a DID
        document</p>
        <p>See the <a href="https://w3c-ccg.github.io/did-resolution/">DID Resolution</a>
        specification for additional details.</p>
      operationId: resolveDID
      tags:
        - DIDs
      parameters:
        - in: path
          required: true
          name: identifier
          schema:
            type: string
          description: The DID to be resolved.
          examples:
            example1:
              value: did:web:verification.sphereon.com:did:party_gln:8720796007237
              description: A DID using the `web` method with a PartyGLN.
        - in: header
          required: false
          name: Accept
          schema:
            type: string
          description: The requested media type of the DID document representation or DID resolution result. See <a href="https://www.w3.org/TR/did-core/#representations">https://www.w3.org/TR/did-core/#representations</a> and <a href="https://w3c-ccg.github.io/did-resolution/#did-resolution-result">https://w3c-ccg.github.io/did-resolution/#did-resolution-result</a>.
          examples:
            application/did+json:
              value: application/json
              description: Media type of a DID document (JSON representation).
      responses:
        '200':
          description: successfully resolved!
          content:
            application/did+ld+json:
              schema:
                type: object
                description: The DID document (JSON-LD representation).
                example:
                  "@context":
                    - https://www.w3.org/2018/credentials/v1
                    - https://w3id.org/vc/status-list/2021/v1
                    - https://ref.sphereon.com/vc/license-context/
                  id: https://verification.sphereon.com/vc/license/company_prefix/8790171
                  type: [
                    VerifiableCredential,
                    SphereonCompanyPrefixLicenseCredential
                  ]
                  issuer: did:web:verification.sphereon.com
                  issuanceDate: 2023-06-22T00:00:00Z
                  validUntil: 2024-06-22T00:00:00Z
                  credentialSubject:
                    id: did:web:verification.sphereon.com:did:party_gln:8720796007237
                    organization:
                      "sphereon:partyGLN": "8720796007237"
                      "sphereon:organizationName": "Test Account"
                      "sphereon:additionalOrganizationID":
                        - "sphereon:organizationID": "90001745"
                          "sphereon:organizationID_Type": "CoC"
                    licenseValue: "8790171"

                  credentialStatus:
                    id: https://verification.sphereon.com/vc/status/1#8790171
                    type: StatusList2021Entry
                    statusPurpose: revocation
                    statusListIndex: "8790171"
                    statusListCredential: https://verification.sphereon.com/vc/status/1
            application/ld+json;profile="https://w3id.org/did-resolution":
              schema:
                $ref: '#/components/schemas/ResolutionResult'
        '400':
          description: invalid input!
        '410':
          description: successfully resolved (deactivated)!
          content:
            application/did+json:
              schema:
                type: object
                description: The deactivated DID document (JSON representation).
            application/did+ld+json:
              schema:
                type: object
                description: The deactivated DID document (JSON-LD representation).
            application/ld+json;profile="https://w3id.org/did-resolution":
              schema:
                $ref: '#/components/schemas/ResolutionResult'
        '500':
          description: error!
    delete:
      summary: Deactivate a DID.
      description:
        <p>This endpoint deactivates a DID. As input it takes the existing DID plus options, and optionally secrets
        needed to deactivate a DID. The output is a state object that represents the current state of the DID deactivation
        process.</p>
        <p>See the <a href="https://identity.foundation/did-registration/#deactivate">DID Registration</a>
        specification for additional details.</p>
      tags:
        - DIDs
      operationId: deactivateDID
      parameters:
        - in: path
          required: true
          name: identifier
          schema:
            type: string
          description: The DID to be resolved.
          examples:
            example1:
              value: did:web:verification.sphereon.com:did:party_gln:8720796007237
              description: A DID using the `web` method with a PartyGLN.
      responses:
        '200':
          description:
            The request was successful, and the DID may or may not be fully deactivated yet, as indicated by the
            "didState.state" and "jobId" output fields. Additional state information plus metadata are available in the response body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeactivateState'
        '400':
          description:
            A problem with the input fields has occurred. Additional state information plus metadata may be
            available in the response body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeactivateState'
        '500':
          description:
            An internal error has occurred. Additional state information plus metadata may be
            available in the response body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeactivateState'
  /did/methods:
    get:
      summary: Returns a list of supported DID methods.
      operationId: getDIDMethods
      tags:
        - DIDs
      responses:
        '200':
          description: Success.
          content:
            application/did+json:
              schema:
                type: array
                items:
                  type: string
                description: The list of supported DID methods.
                example: ["web","jwk"]
tags:
  - name: Credentials
    description: Endpoints targeting Credential issuance and verification
    x-displayName: Credentials
  - name: DIDs
    description: Endpoints targeting DID resolution and creation
    x-displayName: DIDs
components:
  securitySchemes:
    oAuth2:
      type: http
      scheme: bearer
  schemas:
    ErrorResponse:
      type: object
      description: A response that denotes that an error has occurred.
      properties:
        id:
          type: string
          pattern: '[a-z0-9\-]{8,}'
          description: An error id.
        message:
          type: string
          minLength: 10
          maxLength: 100
          description: The error message.
        details:
          type: object
          description: An object with error details.
      required:
        - id
        - message
      example:
        id: invalid-json
        message: The provided JSON data was malformed.
    Issuer:
      type: object
      description: A JSON-LD Verifiable Credential Issuer.
      oneOf:
        - type: string
        - type: object
          properties:
            id:
              type: string
              description: The issuer id.
      example:
        id: did:key:z6MkjRagNiMu91DduvCvgEsqLZDVzrJzFrwahc4tXLt9DoHd
    Credential:
      type: object
      description: A JSON-LD Credential without a proof.
      properties:
        '@context':
          type: array
          description: The JSON-LD context of the credential.
          items:
            type: string
        id:
          type: string
          description: The ID of the credential.
        type:
          type: array
          description: The JSON-LD type of the credential.
          items:
            type: string
        issuer:
          $ref: '#/components/schemas/Issuer'
        issuanceDate:
          type: string
          description: The issuanceDate
        expirationDate:
          type: string
          description: The expirationDate
        credentialSubject:
          type: object
          description: The subject
      example:
        "@context":
          - https://www.w3.org/2018/credentials/v1
          - https://w3id.org/vc/status-list/2021/v1
          - https://ref.sphereon.com/vc/license-context/
        id: https://verification.sphereon.com/vc/license/company_prefix/8790171
        type: [
          VerifiableCredential,
          SphereonCompanyPrefixLicenseCredential
        ]
        issuer: did:web:verification.sphereon.com
        issuanceDate: 2023-06-22T00:00:00Z
        validUntil: 2024-06-22T00:00:00Z
        credentialSubject:
          id: did:web:verification.sphereon.com:did:party_gln:8720796007237
          organization:
            "sphereon:partyGLN": "8720796007237"
            "sphereon:organizationName": "Test Account"
            "sphereon:additionalOrganizationID":
              - "sphereon:organizationID": "90001745"
                "sphereon:organizationID_Type": "CoC"
          licenseValue: "8790171"

        credentialStatus:
          id: https://verification.sphereon.com/vc/status/1#8790171
          type: StatusList2021Entry
          statusPurpose: revocation
          statusListIndex: "8790171"
          statusListCredential: https://verification.sphereon.com/vc/status/1
    LinkedDataProof:
      type: object
      description: A JSON-LD Linked Data proof.
      properties:
        type:
          type: string
          description: Linked Data Signature Suite used to produce proof.
        created:
          type: string
          description: Date the proof was created.
        challenge:
          type: string
          description: >-
            A value chosen by the verifier to mitigate authentication proof
            replay attacks.
        domain:
          type: string
          description: The domain of the proof to restrict its use to a particular target.
        nonce:
          type: string
          description: >-
            A value chosen by the creator of a proof to randomize proof values
            for privacy purposes.
        verificationMethod:
          type: string
          description: Verification Method used to verify proof.
        proofPurpose:
          type: string
          description: The purpose of the proof to be used with verificationMethod.
        jws:
          type: string
          description: Detached JSON Web Signature.
        proofValue:
          type: string
          description: Value of the Linked Data proof.
      example:
        type: JsonWebSignature2020
        created: '2023-07-25T18:28:08Z'
        verificationMethod: did:web:verification.sphereon.com:did:party_gln:8720796007237
        proofPurpose: assertionMethod
        jws: >-
          eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA
    VerifiableCredential:
      type: object
      description: A JSON-LD Verifiable Credential with a proof.
      allOf:
        - $ref: '#/components/schemas/Credential'
        - type: object
          properties:
            proof:
              $ref: '#/components/schemas/LinkedDataProof'
      example:
        "@context":
          - https://www.w3.org/2018/credentials/v1
          - https://w3id.org/vc/status-list/2021/v1
          - https://ref.sphereon.com/vc/license-context/
        id: https://verification.sphereon.com/vc/license/company_prefix/8790171
        type: [
          VerifiableCredential,
          SphereonCompanyPrefixLicenseCredential
        ]
        issuer: did:web:verification.sphereon.com
        issuanceDate: 2023-06-22T00:00:00Z
        validUntil: 2024-06-22T00:00:00Z
        credentialSubject:
          id: did:web:verification.sphereon.com:did:party_gln:8720796007237
          organization:
            "sphereon:partyGLN": "8720796007237"
            "sphereon:organizationName": "Test Account"
            "sphereon:additionalOrganizationID":
              - "sphereon:organizationID": "90001745"
                "sphereon:organizationID_Type": "CoC"
          licenseValue: "8790171"

        credentialStatus:
          id: https://verification.sphereon.com/vc/status/1#8790171
          type: StatusList2021Entry
          statusPurpose: revocation
          statusListIndex: "8790171"
          statusListCredential: https://verification.sphereon.com/vc/status/1
        proof:
          type: JsonWebSignature2020
          created: 2023-06-29T22:20:27Z
          proofPurpose: assertionMethod
          verificationMethod: did:web:verification.sphereon.com#key-1
          jws: "ey......."



    IssueCredentialRequest:
      type: object
      properties:
        credential:
          $ref: '#/components/schemas/Credential'
        options:
          $ref: '#/components/schemas/IssueCredentialOptions'
    IssueCredentialResponse:
      type: object
      properties:
        verifiableCredential:
          $ref: '#/components/schemas/VerifiableCredential'
    UpdateCredentialStatus:
      type: object
      description: Request for updating the status of an issued credential.
      properties:
        credentialId:
          type: string
        credentialStatus:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              status:
                type: string
      example:
        credentialId: urn:uuid:45a44711-e457-4fa8-9b89-69fe0287c86a
        credentialStatus:
          - type: RevocationList2020Status
            status: '0'
    IssueCredentialOptions:
      type: object
      additionalProperties: false
      description: Options for specifying how the LinkedDataProof is created.
      properties:
        created:
          type: string
          description: >-
            The date and time of the proof (with a maximum accuracy in seconds).
            Default current system time.
        challenge:
          type: string
          description: >-
            A challenge provided by the requesting party of the proof. For
            example 6e62f66e-67de-11eb-b490-ef3eeefa55f2
        domain:
          type: string
          description: >-
            The intended domain of validity for the proof. For example
            website.example
        credentialStatus:
          type: object
          description: >-
            The method of credential status to issue the credential including.
            If omitted credential status will be included.
          properties:
            type:
              type: string
              description: The type of credential status to issue the credential with
      example:
        created: '2020-04-02T18:48:36Z'
        credentialStatus:
          type: RevocationList2020Status
    VerifyCredentialRequest:
      type: object
      properties:
        verifiableCredential:
          $ref: '#/components/schemas/VerifiableCredential'
        options:
          $ref: '#/components/schemas/VerifyOptions'
    VerifyCredentialResponse:
      $ref: '#/components/schemas/VerificationResult'
    VerifyOptions:
      type: object
      additionalProperties: false
      description: Options for specifying how the LinkedDataProof is verified.
      properties:
        challenge:
          type: string
          description: >-
            A challenge provided by the requesting party of the proof. For
            example 6e62f66e-67de-11eb-b490-ef3eeefa55f2
        domain:
          type: string
          description: >-
            The intended domain of validity for the proof. For example
            website.example
      example:
        verificationMethod: did:web:verification.sphereon.com#key-1
        proofPurpose: assertionMethod
        created: '2023-06-29T18:48:36Z'
        domain: verification.sphereon.com
        challenge: d436f0c8-fbd9-4e48-bbb2-55fc5d0920a8
    VerificationResult:
      type: object
      additionalProperties: false
      description: Object summarizing a verification
      properties:
        checks:
          type: array
          description: The checks performed
          items:
            type: string
        warnings:
          type: array
          description: Warnings
          items:
            type: string
        errors:
          type: array
          description: Errors
          items:
            type: string
      example:
        checks:
          - proof
        warnings: []
        errors: []
    ResolutionResult:
      description: The DID resolution result.
      type: object
      additionalProperties: false
      properties:
        didDocument:
          type: object
        didResolutionMetadata:
          type: object
        didDocumentMetadata:
          type: object
    CreateRequest:
      description: Input fields for the create operation.
      type: object
      additionalProperties: false
      properties:
        jobId:
          description:
            This input field is used to keep track of an ongoing DID creation process.
            See <a href="https://identity.foundation/did-registration/#jobid">https://identity.foundation/did-registration/#jobid</a>.
          type: string
          example: 6d85bcd0-2ea3-4288-ab00-15afadd8a156
        options:
          description:
            This input field contains an object with various options for the DID create operation, such as the network where the DID should be created.
            See <a href="https://identity.foundation/did-registration/#options">https://identity.foundation/did-registration/#options</a>.
          type: object
          example: {"chain": "testnet"}
        secret:
          description:
            This input field contains an object with DID controller keys and other secrets needed for performing the DID create operation.
            See <a href="https://identity.foundation/did-registration/#secret">https://identity.foundation/did-registration/#secret</a>.
          type: object
          example: {"seed": "72WGp7NgFR1Oqdi8zlt7jQQ434XR0cNQ"}
        didDocument:
          description:
            This input field contains either a complete DID document, or an incremental change (diff) to a DID document.
            See <a href="https://identity.foundation/did-registration/#diddocument">https://identity.foundation/did-registration/#diddocument</a>.
          type: object
    UpdateRequest:
      description: Input fields for the update operation.
      type: object
      additionalProperties: false
      required:
        - did
      properties:
        jobId:
          description:
            This input field is used to keep track of an ongoing DID update process.
            See <a href="https://identity.foundation/did-registration/#jobid">https://identity.foundation/did-registration/#jobid</a>.
          type: string
          example: 6d85bcd0-2ea3-4288-ab00-15afadd8a156
        did:
          description:
            This input field indicates the DID that is the target of the DID update operation.
          type: string
          example: "did:web:verification.sphereon.com:did:party_gln:8720796007237"
        options:
          description:
            This input field contains an object with various options for the DID update operation.
            See <a href="https://identity.foundation/did-registration/#options">https://identity.foundation/did-registration/#options</a>.
          type: object
        secret:
          description:
            This input field contains an object with DID controller keys and other secrets needed for performing the DID update operation.
            See <a href="https://identity.foundation/did-registration/#secret">https://identity.foundation/did-registration/#secret</a>.
          type: object
        didDocumentOperation:
          description:
            This input field indicates which update operation should be applied to a DID’s associated DID document.
            See <a href="https://identity.foundation/did-registration/#diddocumentoperation">https://identity.foundation/did-registration/#diddocumentoperation</a>.
          type: array
          items:
            type: string
        didDocument:
          description:
            This input field contains either a complete DID document, or an incremental change (diff) to a DID document.
            See <a href="https://identity.foundation/did-registration/#diddocument">https://identity.foundation/did-registration/#diddocument</a>.
          type: array
          items:
            type: object
    CreateState:
      description: The state after a create operation.
      type: object
      additionalProperties: false
      required:
        - didState
      properties:
        jobId:
          type: string
          example: 6d85bcd0-2ea3-4288-ab00-15afadd8a156
        didState:
          $ref: '#/components/schemas/DidState'
        didRegistrationMetadata:
          type: object
        didDocumentMetadata:
          type: object
    UpdateState:
      description: The state after an update operation.
      type: object
      additionalProperties: false
      required:
        - didState
      properties:
        jobId:
          type: string
          example: 6d85bcd0-2ea3-4288-ab00-15afadd8a156
        didState:
          $ref: '#/components/schemas/DidState'
        didRegistrationMetadata:
          type: object
        didDocumentMetadata:
          type: object
    DeactivateState:
      description: The state after a deactivate operation.
      type: object
      additionalProperties: false
      required:
        - didState
      properties:
        jobId:
          type: string
          example: 6d85bcd0-2ea3-4288-ab00-15afadd8a156
        didState:
          $ref: '#/components/schemas/DidState'
        didRegistrationMetadata:
          type: object
        didDocumentMetadata:
          type: object
    DidState:
      description: The current state of a DID.
      type: object
      additionalProperties: true
      properties:
        state:
          type: string
          example: "finished"
        did:
          type: string
          example: "did:web:verification.sphereon.com:did:party_gln:8720796007237"
        didDocument:
          type: object
  parameters:
    ObjectId:
      in: path
      name: id
      required: true
      schema:
        anyOf:
          - type: string
            pattern: "[0-9a-f]{8}\b-[0-9a-f]{4}\b-[0-9a-f]{4}\b-[0-9a-f]{4}\b-[0-9a-f]{12}"
          - type: string
            pattern: z[1-9A-HJ-NP-Za-km-z]{21,22}
          - type: string
            pattern: u[a-zA-Z0-9_-]{22,23}
      example:
        - f37e5114-8b4a-11ec-b32e-fbd62b9502c1
        - z4Z1T4HdLdfXCFAhdhzdCqm
        - u7m8_ybOArX-EWeADqWCsIw
